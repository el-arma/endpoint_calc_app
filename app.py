# Comments and only comments in this script were generated by LLM, for educational purposes only
"""Module providing an endpoint to perform calculation with the HTTP: GET method"""

# Import necessary Flask modules
from flask import Flask, request, jsonify

# Step 1: Create an instance of the Flask class, which will manage the app:
app = Flask(__name__)

# Step 2: Define the route for the "/calculate" URL path that accepts GET requests:
@app.route('/calculate', methods=['GET'])

def calc():
    """ This is a proper docstring"""

    # Step 3: Get the query parameters 'op', 'arg1', and 'arg2' from the URL:
    op = request.args.get('op', type = str)
    arg1 = request.args.get('arg1', type = int)
    arg2 = request.args.get('arg2', type = int)

    # Step 4: Check the operation type and perform the calculation:
    if op == 'sum':
        res = f"{arg1} + {arg2} = {arg1 + arg2}"
    elif op == 'sub':
        res = f"{arg1} - {arg2} = {arg1 - arg2}"
    elif op == 'mul':
        res = f"{arg1} * {arg2} = {arg1 * arg2}"
    elif op == 'div':
        if arg2:
            res = f"{arg1} / {arg2} = {arg1 / arg2}"
        else:
            return jsonify({"Error": "Sure you can divide by 0!"})
    else:
        return jsonify({"Error": "Proper operation not define use: sum/sub/mul/div"})

    # Step 5: Return the result in a JSON format:
    return res

# Step 6: Run the Flask app if this script is executed directly:
if __name__ == '__main__':
    app.run(debug = True)


# this is a sample comment to test Github Actions for PyLint